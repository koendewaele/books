openapi: 3.0.0
info:
  title: Book Management API
  version: 1.0.0
  description: | 
    A simple API to manage books. This API supports the CBX Academy use case for the course 'API tools in practice'.
    You can consult [CBX Academy info page](https://cornerbrix.atlassian.net/wiki/spaces/CLU/pages/296517662/CBX+Academy) for more information.

    # Authentication and autorization 
    This API expects a Bearer token in the Authorization header
    ## What is Bearer Authentication?
    Bearer authentication (also known as token authentication) involves security tokens called bearer tokens. The term “bearer” means 
    that whoever holds the token (the bearer) can access the protected resources. 
    These tokens are usually generated by the server in response to a login request and must be included in the Authorization header of subsequent requests.







  license: 
    name: CBX Academy educational license
    url: https://www.cbx.be/licences/educational
  contact: 
    name: 'I8C Academy'
    url: https://cornerbrix.atlassian.net/wiki/spaces/CLU/pages/296517662/CBX+Academy
    email: cbxacademy@i8c.be
tags:
  - name: books
    description: operations to manage a collection of books
servers:
  - url: https://127.0.0.1:4010
    description: Local prism mock server

components:
  examples:
    InternalServerErrorExample:
      summary: internal server error
      value:
        type: "URI:https://www.i8c.be/CBXAcademy/Problems/Server/Error"
        title: "An unexpected condition encountered."
        status: 500
        detail: "Something bad happened but it's our fault and we will look into it. In case you need to contact us here is an incident response number you can use: IRN458652554."
        instance: "GET /books/4585."   
    
    ApiRateLimitsExample:
        summary: API rate limits
        value:
          type: "URI:https://www.i8c.be/CBXAcademy/Problems/RateUsageLimits/Exceeded"
          title: "Allowed number of calls exceeded."
          status: 429
          detail: "Your call exceeds the allowed number of daily api calls for your current subscription 'free tier'. Try again tomorrow or subscribe to a higher service tier subscription."
          instance: "POST /books."    
    
    TooManyFailedLoginsExample:
          summary: Too many failed logins
          value:
            type: "URI:https://www.i8c.be/CBXAcademy/Problems/Authentication/TooManyFailedLoginAttempts"
            title: "Multiple failed logins attempts in a short time."
            status: 429
            detail: "Login with credential 'johndoe' failed too many times in a short period. Your account is temporary blocked. Contact support."
            instance: "POST /books."    
 
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "This api needs a signed jwt token"
  schemas:
    Book:
      description: Book is an item in the book collection
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          minimum: 0
          maximum: 1000000
          format: int32
          example: 1
        title:
          type: string
          minLength: 0
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\s.]+$"
          example: "The great Gatsby"
        author:
          type: string
          minLength: 0
          maxLength: 256
          pattern: "^[a-zA-Z0-9\\s.]+$"
          example: "F. Scott Fitzgerald"
        publishedDate:
          type: string
          minLength: 10
          maxLength: 256
          pattern: "^[0-9-]+$"
          format: date
          example: "1925-04-10"
        ISBN:
            type: string
            minLength: 10
            maxLength: 14
            pattern: "^(?:\\d[\\ |-]?){9}[\\d|X]$|^(?:\\d[\\ |-]?){13}$"
            example: "978-0345391803"
      example:
          id: 1
          title: "The great gatsby"
          author: "F. Scott fitzgerald"
          publishedDate: "1925-10-04" 
          ISBN: "978-0345391803"

    ProblemDetails:
      description: standardised API error responses
      type: object
      additionalProperties: false
      properties:
        type: 
          type: string
          maxLength: 1024
          pattern: '^URI:https:\/\/www\.i8c\.be\/CBXAcademy\/Problems\/[^\/]+\/[^\/]+$'
          example: "URI:https://www.i8c.be/CBXAcademy/Problems/Books/Notfound"         
        title: 
          type: string
          pattern: '.*[.!?]$'
          maxLength: 1024
          example: "The book could not be found. Tweede zin."
        status:
          type: number
          example: 404
        detail:
          type: string
          maxLength: 4096
          pattern: '.*[.!?]$'
          example: "The bookid searchparameter did not yield a corresponding ID and book result."
        instance:
          type: string
          maxLength: 1024
          pattern: '.*[.!?]$'
          example: "GET /books/4585."
      example:
        type: "URI:https://www.i8c.be/CBXAcademy/Problems/Books/Notfound"
        title: "The book could not be found."
        status: 404
        detail: "The bookid searchparameter did not yield a corresponding ID and book result."
        instance: "GET /books/4585."
             
security:
  - BearerAuth: []

paths:
  /books:
    get:
      tags: 
        - books 
      operationId: getAllBooks
      description: Get all books
      summary: Get all books
      security:
        - BearerAuth: []
      responses:
        '200':
          description: The first 1000 results of all books in the collection
          content:
            application/json:
              schema:
                type: array
                maxItems: 1000
                items:
                  $ref: '#/components/schemas/Book'  
              example:
              - id: 1
                title: "The great gatsby"
                author: "F. Scott fitzgerald"
                publishedDate: "1925-10-04"
                ISBN: "978-0345391803"

              - id: 2
                title: "To kill a mockingbird"
                author: "Harper Lee"
                publishedDate: "1960-07-11"
                ISBN: "978-0345391803"

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'   
              examples:
                example1:
                  summary: permissions
                  value:
                    type: "URI:https://www.i8c.be/CBXAcademy/Problems/Permissions/Unauthorized"
                    title: "The server understands your request but refuses to authorize it."
                    status: 403
                    detail: "Your credential 'johndoe' doesn't let you access this resource. Check your access permissions."
                    instance: "GET /books/4585."    
                example2:
                  summary: no credentials
                  value:
                    type: "URI:https://www.i8c.be/CBXAcademy/Problems/Authentication/NoCredentials"
                    title: "No valid credentials provided."
                    status: 403
                    detail: "The HTTP header 'Authorization' was empty. See our authentication guide for an example of how to setup an authenticaded API call."
                    instance: "GET /books/4585."    

        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
              examples:
                example1:
                  summary: Incorrect url
                  value:
                    type: "URI:https://www.i8c.be/CBXAcademy/Problems/Client/IncorrectUrl"
                    title: "Incorrect or mistyped URL."
                    status: 404
                    detail: "The submitted url is incorrect or mistyped."
                    instance: "GET /books/4585."    
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
              examples:
                example1:
                  $ref: '#/components/examples/ApiRateLimitsExample'
                example2:
                  $ref: '#/components/examples/TooManyFailedLoginsExample'
                
        'default':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
              examples:
                example1:
                  $ref: '#/components/examples/InternalServerErrorExample'

    post:
      tags: 
        - books 
      operationId: addBookToTheCollection
      description: Adds a new book to the collection
      summary: adds a single new book
      security:
        - BearerAuth: []
      requestBody:
        description: The complete information of the book to be added to the collection
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
                id: 1
                title: "The great gatsby"
                author: "F. Scott fitzgerald"
                publishedDate: "1925-10-04"
                ISBN: "978-0345391803"
      responses:
        '201':
          description: Book created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
              example:
                id: 1
                title: "The great gatsby"
                author: "F. Scott fitzgerald"
                publishedDate: "1925-10-04" 
                ISBN: "978-0345391803"
        '400':
          description: Invalid or incomplete book information supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails' 
              examples:
                example1:
                  summary: Invalid or incomplete book information supplied
                  value:
                    type: "URI:https://www.i8c.be/CBXAcademy/Problems/Books/InvalidInformation"
                    title: "Invalid or incomplete book information supplied."
                    status: 400
                    detail: "The request does not contain the following fields: ISBN, PublishedDate. See the documentation for more details."
                    instance: "POST /books, tracingid = 123e4567-e89b-12d3-a456-426614174000."    
       
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'   
              examples:
                example1:
                  $ref: '#/components/examples/TooManyFailedLoginsExample'
                example2:
                  $ref: '#/components/examples/ApiRateLimitsExample'     
        'default':
          description: Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'  
              examples:
                example1:
                  $ref: '#/components/examples/InternalServerErrorExample'
                  
  /books/{id}:
    get:
      tags:
       - books
      operationId: getSingleBook
      description: Find a book by it's unique identifier
      summary: Get a book by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          description: The unique identifier of the book
          in: path
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 1000000
            format: int32
          example:
            1
      responses:
        '200':
          description: A single book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
              example:
                id: 1
                title: "The great gatsby"
                author: "F. Scott fitzgerald"
                publishedDate: "1925-10-04" 
                ISBN: "978-0345391803"
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'  

        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
              examples:
                example1:
                  $ref: '#/components/examples/ApiRateLimitsExample'
                example2:
                  $ref: '#/components/examples/TooManyFailedLoginsExample'
        'default':
          description: Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
              examples:
                example1:
                  $ref: '#/components/examples/InternalServerErrorExample'       
    put:
      tags:
       - books
      operationId: upDateInfoForSingleBook
      description: Update a book by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          description: The bookID of the book that needs to be updated
          in: path
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 1000000
            format: int32
          example: 1
      requestBody:
        description: The update Book entity.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
              id: 1
              title: "The great gatsby"
              author: "F. Scott fitzgerald"
              publishedDate: "1925-10-04"
              ISBN: "978-0345391803"
      responses:
        '200':
          description: Book updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
              example:
                id: 1
                title: "The great gatsby"
                author: "F. Scott fitzgerald"
                publishedDate: "1925-10-04" 
                ISBN: "978-0345391803"
        '404':
          description: The book to be updated could not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
              examples:
                example1:
                  $ref: '#/components/examples/ApiRateLimitsExample'
                example2:
                  $ref: '#/components/examples/TooManyFailedLoginsExample'
        'default':
          description: Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
              examples:
                example1:
                  $ref: '#/components/examples/InternalServerErrorExample'       
    delete:
      tags:
        - books
      operationId: deleteSingleBook
      description: Removes a book from the collection
      summary: deletes a book by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          description: The unique identifier of the book to be removed from the collection
          in: path
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 1000000
            format: int32
            example: 1
      responses:
        '204':
          description: Book deleted
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'        
              examples:
                example1:
                  $ref: '#/components/examples/ApiRateLimitsExample'
                example2:
                  $ref: '#/components/examples/TooManyFailedLoginsExample'
        'default':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails' 
              examples:
                example1:
                  $ref: '#/components/examples/InternalServerErrorExample'       